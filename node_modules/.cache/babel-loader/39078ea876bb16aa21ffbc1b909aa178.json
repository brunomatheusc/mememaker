{"ast":null,"code":"import _regeneratorRuntime from\"/home/bmatheusc/Documentos/GitHub/mememaker/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bmatheusc/Documentos/GitHub/mememaker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/bmatheusc/Documentos/GitHub/mememaker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Wrapper,Card,Templates,Form,Button,Meme}from'./styles';import qs from'qs';import logo from\"../../assets/logo.svg\";import api from'../../services/api';var Home=function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),templates=_useState2[0],setTemplates=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedTemplate=_useState4[0],setSelectedTemplate=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),boxes=_useState6[0],setBoxes=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),generatedMeme=_useState8[0],setGeneratedMeme=_useState8[1];useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,memes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.get('/get_memes');case 2:response=_context.sent;memes=response.data.data.memes;setTemplates(memes);case 5:case\"end\":return _context.stop();}}},_callee);}))();},[]);var handleInputChange=function handleInputChange(index){return function(e){var newValues=boxes;newValues[index]=e.target.value;setBoxes(newValues);};};function handleSelectTemplate(template){setSelectedTemplate(template);setBoxes([]);}function handleReset(){setSelectedTemplate(undefined);setBoxes([]);setGeneratedMeme('');}function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var params,response,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();params=qs.stringify({template_id:selectedTemplate===null||selectedTemplate===void 0?void 0:selectedTemplate.id,username:'vikayel543',password:'vikayel543',boxes:boxes.map(function(text){return{text:text};})});_context2.next=4;return api.get(\"/caption_image?\".concat(params));case 4:response=_context2.sent;url=response.data.data.url;console.log(response);setGeneratedMeme(url);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _handleSubmit.apply(this,arguments);}function handleDownload(){return _handleDownload.apply(this,arguments);}function _handleDownload(){_handleDownload=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var blob,url,a;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(generatedMeme).then(function(r){return r.blob();});case 2:blob=_context3.sent;url=window.URL.createObjectURL(blob);a=document.createElement('a');a.href=url;a.download='meme.jpg';document.body.appendChild(a);a.click();case 9:case\"end\":return _context3.stop();}}},_callee3);}));return _handleDownload.apply(this,arguments);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Wrapper,{generated:generatedMeme?true:false},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"MemeMaker\"}),/*#__PURE__*/React.createElement(Card,null,generatedMeme?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Meme,{src:generatedMeme,alt:\"Generated Meme\"}),/*#__PURE__*/React.createElement(Button,{onClick:handleReset},\"Criar outro meme\"),/*#__PURE__*/React.createElement(Button,{onClick:handleDownload},\"Download meme\")):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Selecione um template\"),/*#__PURE__*/React.createElement(Templates,null,templates.map(function(template){return/*#__PURE__*/React.createElement(\"button\",{key:template.id,onClick:function onClick(){return handleSelectTemplate(template);},className:template.id==(selectedTemplate===null||selectedTemplate===void 0?void 0:selectedTemplate.id)?'selected':''},/*#__PURE__*/React.createElement(\"img\",{src:template.url,alt:template.name}));})),selectedTemplate&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Textos\"),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},new Array(selectedTemplate.box_count).fill('').map(function(_,index){return/*#__PURE__*/React.createElement(\"input\",{type:\"text\",key:index,placeholder:\"Text #\".concat(index+1),onChange:handleInputChange(index)});}),/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"MakeMyMeme\")))))));};export default Home;","map":{"version":3,"sources":["/home/bmatheusc/Documentos/GitHub/mememaker/src/pages/Home/index.tsx"],"names":["React","useState","useEffect","Wrapper","Card","Templates","Form","Button","Meme","qs","api","Home","templates","setTemplates","selectedTemplate","setSelectedTemplate","boxes","setBoxes","generatedMeme","setGeneratedMeme","get","response","memes","data","handleInputChange","index","e","newValues","target","value","handleSelectTemplate","template","handleReset","undefined","handleSubmit","preventDefault","params","stringify","template_id","id","username","password","map","text","url","console","log","handleDownload","fetch","then","r","blob","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","logo","name","Array","box_count","fill","_"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport { Wrapper, Card, Templates, Form, Button, Meme } from './styles';\n\nimport qs from 'qs';\n\nimport logo from '../../assets/logo.svg';\nimport api from '../../services/api';\n\ninterface ITemplate {\n    id: number;\n    name: string;\n    url: string;\n    box_count: number;\n}\n\nconst Home: FC = () => {\n    const [templates, setTemplates] = useState<ITemplate[]>([]);\n    const [selectedTemplate, setSelectedTemplate] = useState<ITemplate>();\n    const [boxes, setBoxes] = useState<string[]>([]);\n    const [generatedMeme, setGeneratedMeme] = useState<string>('');\n\n    useEffect(() => {\n        (async () => {\n            const response = await api.get('/get_memes');           \n            const { data: { memes } } = response.data;\n\n            setTemplates(memes);\n        })();\n    }, []);\n\n    const handleInputChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n        const newValues = boxes;\n        newValues[index] = e.target.value;\n        setBoxes(newValues);\n    }\n\n    function handleSelectTemplate(template: ITemplate) {\n        setSelectedTemplate(template);\n        setBoxes([]);\n    }\n\n    function handleReset() {\n        setSelectedTemplate(undefined);\n        setBoxes([]);\n        setGeneratedMeme('');\n    }\n\n    async function handleSubmit(e: FormEvent) {\n        e.preventDefault();\n\n        const params = qs.stringify({\n            template_id: selectedTemplate?.id,\n            username: 'vikayel543',\n            password: 'vikayel543',\n            boxes: boxes.map(text => ({ text })),\n        });\n\n        const response = await api.get(`/caption_image?${params}`);\n        const { data: { url }} = response.data;\n\n        console.log(response);\n\n        setGeneratedMeme(url);\n    }\n\n    async function handleDownload() {\n        let blob = await fetch(generatedMeme).then(r => r.blob());\n        const url = window.URL.createObjectURL(blob);\n\n        let a = document.createElement('a');\n\n        a.href = url;\n        a.download = 'meme.jpg';\n        document.body.appendChild(a);\n        a.click();\n    }\n\n    return (\n        <>\n            <Wrapper generated={ generatedMeme ? true : false }>\n                <img src={ logo } alt=\"MemeMaker\"/>\n\n                <Card>\n                    { generatedMeme ? (\n                        <>\n                            <Meme src={ generatedMeme } alt=\"Generated Meme\"/>\n                            <Button onClick={ handleReset }>Criar outro meme</Button>\n                            <Button onClick={ handleDownload }>Download meme</Button>\n                        </>\n                    )\n                    : (\n                        <>\n                            <h2>Selecione um template</h2>\n        \n                            <Templates>\n                                { templates.map((template) => (\n                                    <button key={ template.id } onClick={ () => handleSelectTemplate(template) } className={ template.id == selectedTemplate?.id ? 'selected' : '' }>\n                                        <img src={ template.url } alt={ template.name } />\n                                    </button>\n                                ))}\n                            </Templates>\n        \n                            { selectedTemplate && (\n                                <>\n                                    <h2>Textos</h2>\n        \n                                    <Form onSubmit={ handleSubmit }>\n                                        { (new Array(selectedTemplate.box_count).fill('').map((_, index) => (\n                                            <input type=\"text\" key={index} placeholder={ `Text #${index + 1}`} onChange={ handleInputChange(index) } />\n                                        )))}\n        \n                                        <Button type=\"submit\">MakeMyMeme</Button>\n                                    </Form>\n                                </>\n                            )}\n                        </>\n                    )}\n\n                </Card>\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}