{"version":3,"sources":["assets/logo.svg","pages/Home/styles.ts","services/api.ts","pages/Home/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Wrapper","styled","div","generated","css","Meme","img","Card","Templates","Form","form","Button","button","api","axios","create","baseURL","Home","useState","templates","setTemplates","selectedTemplate","setSelectedTemplate","boxes","setBoxes","generatedMeme","setGeneratedMeme","useEffect","a","get","response","memes","data","handleInputChange","index","e","newValues","target","value","preventDefault","params","qs","stringify","template_id","id","username","password","map","text","url","console","log","fetch","then","r","blob","window","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","src","logo","alt","onClick","undefined","template","key","handleSelectTemplate","className","name","onSubmit","Array","box_count","fill","_","type","placeholder","onChange","createGlobalStyle","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1435c7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.015d6b96.svg\";","import styled, { css } from 'styled-components';\n\ninterface IWrapper {\n    generated?: boolean;\n}\n\nexport const Wrapper = styled.div<IWrapper>`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    ${({ generated }) => generated && css`\n        /* margin: 50px 0; */\n    `}\n\n    img {\n        margin-top: 30px;\n    }\n\n    @media(max-width: 340px) {\n        img {\n            width: 80%;\n        }\n    }\n`;\n\nexport const Meme = styled.img`\n    height: 400px;\n\n    @media(max-width: 1000px) {\n        height: 200px;\n        width: 100%;\n    }\n`;\n\nexport const Card = styled.div`\n    background: #fff;\n    width: 550px;\n    border-radius: 8px;\n    padding: 20px;\n    margin: 20px 0;\n    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.20);\n\n    h2 {\n        font-size: 22px;\n        color: #392d2d;\n        margin-bottom: 10px;\n    }\n\n    @media(max-width: 1000px) {\n        width: 90%;\n    }\n`;\n\nexport const Templates = styled.div`\n    width: 100%;\n    height: 90px;\n    background: #eee;\n    border-radius: 8px;\n    overflow-y: auto;\n    display: flex;\n    align-items: center;\n    padding: 0 15px;\n    margin-bottom: 30px;\n\n    button {\n        background: transparent;\n        margin-right: 10px;\n        border: 2px solid transparent;\n\n        &.selected {\n            border-color: #4395d8;\n        }\n\n        img {\n            width: 53px;\n            height: 53px;\n        }\n    }\n`;\n\nexport const Form = styled.form`\n    input {\n        width: 100%;\n        height: 40px;\n        border-radius: 8px;\n        border: 1px solid #dbdbdb;\n        padding: 0 15px;\n        font-size: 14px;\n        margin-bottom: 10px;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 100%;\n    height: 40px;\n    border-radius: 8px;\n    border: 0;\n    background: #4395d8;\n    color: #fff;\n    font-weight: bold;\n    transition: background 0.2s ease-in;\n\n    &:hover {\n        background: #3672a3;\n    }\n\n    & + & {\n        margin-top: 20px;\n    }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.imgflip.com',\n});\n\nexport default api;","import React, { FC, useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport { Wrapper, Card, Templates, Form, Button, Meme } from './styles';\n\nimport qs from 'qs';\n\nimport logo from '../../assets/logo.svg';\nimport api from '../../services/api';\n\ninterface ITemplate {\n    id: number;\n    name: string;\n    url: string;\n    box_count: number;\n}\n\nconst Home: FC = () => {\n    const [templates, setTemplates] = useState<ITemplate[]>([]);\n    const [selectedTemplate, setSelectedTemplate] = useState<ITemplate>();\n    const [boxes, setBoxes] = useState<string[]>([]);\n    const [generatedMeme, setGeneratedMeme] = useState<string>('');\n\n    useEffect(() => {\n        (async () => {\n            const response = await api.get('/get_memes');           \n            const { data: { memes } } = response.data;\n\n            setTemplates(memes);\n        })();\n    }, []);\n\n    const handleInputChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n        const newValues = boxes;\n        newValues[index] = e.target.value;\n        setBoxes(newValues);\n    }\n\n    function handleSelectTemplate(template: ITemplate) {\n        setSelectedTemplate(template);\n        setBoxes([]);\n    }\n\n    function handleReset() {\n        setSelectedTemplate(undefined);\n        setBoxes([]);\n        setGeneratedMeme('');\n    }\n\n    async function handleSubmit(e: FormEvent) {\n        e.preventDefault();\n\n        const params = qs.stringify({\n            template_id: selectedTemplate?.id,\n            username: 'vikayel543',\n            password: 'vikayel543',\n            boxes: boxes.map(text => ({ text })),\n        });\n\n        const response = await api.get(`/caption_image?${params}`);\n        const { data: { url }} = response.data;\n\n        console.log(response);\n\n        setGeneratedMeme(url);\n    }\n\n    async function handleDownload() {\n        let blob = await fetch(generatedMeme).then(r => r.blob());\n        const url = window.URL.createObjectURL(blob);\n\n        let a = document.createElement('a');\n\n        a.href = url;\n        a.download = 'meme.jpg';\n        document.body.appendChild(a);\n        a.click();\n    }\n\n    return (\n        <>\n            <Wrapper generated={ generatedMeme ? true : false }>\n                <img src={ logo } alt=\"MemeMaker\"/>\n\n                <Card>\n                    { generatedMeme ? (\n                        <>\n                            <Meme src={ generatedMeme } alt=\"Generated Meme\"/>\n                            <Button onClick={ handleReset }>Criar outro meme</Button>\n                            <Button onClick={ handleDownload }>Download meme</Button>\n                        </>\n                    )\n                    : (\n                        <>\n                            <h2>Selecione um template</h2>\n        \n                            <Templates>\n                                { templates.map((template) => (\n                                    <button key={ template.id } onClick={ () => handleSelectTemplate(template) } className={ template.id == selectedTemplate?.id ? 'selected' : '' }>\n                                        <img src={ template.url } alt={ template.name } />\n                                    </button>\n                                ))}\n                            </Templates>\n        \n                            { selectedTemplate && (\n                                <>\n                                    <h2>Textos</h2>\n        \n                                    <Form onSubmit={ handleSubmit }>\n                                        { (new Array(selectedTemplate.box_count).fill('').map((_, index) => (\n                                            <input type=\"text\" key={index} placeholder={ `Text #${index + 1}`} onChange={ handleInputChange(index) } />\n                                        )))}\n        \n                                        <Button type=\"submit\">MakeMyMeme</Button>\n                                    </Form>\n                                </>\n                            )}\n                        </>\n                    )}\n\n                </Card>\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Home;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        font-family: 'Roboto', sans-serif;\n    }\n\n    body {\n        background: #eee;\n    }\n\n    input, button {\n        outline: 0;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;","import React from 'react';\nimport Home from './pages/Home/index';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Home />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}