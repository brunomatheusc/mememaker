{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst request = require('./lib/request');\n\nmodule.exports.image = (options = {}) => {\n  if (!options.url) {\n    return Promise.reject(new Error('The options.url is required'));\n  }\n\n  if (!options.dest) {\n    return Promise.reject(new Error('The options.dest is required'));\n  }\n\n  options = Object.assign({\n    extractFilename: true\n  }, options);\n\n  if (options.extractFilename) {\n    if (!path.extname(options.dest)) {\n      const url = require('url');\n\n      const pathname = url.parse(options.url).pathname;\n      const basename = path.basename(pathname);\n      const decodedBasename = decodeURIComponent(basename);\n      options.dest = path.join(options.dest, decodedBasename);\n    }\n  }\n\n  return request(options);\n};","map":{"version":3,"sources":["/home/bmatheusc/Documentos/GitHub/tutorials/mememaker/node_modules/image-downloader/index.js"],"names":["path","require","request","module","exports","image","options","url","Promise","reject","Error","dest","Object","assign","extractFilename","extname","pathname","parse","basename","decodedBasename","decodeURIComponent","join"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,CAACC,OAAO,GAAG,EAAX,KAAkB;AACvC,MAAI,CAACA,OAAO,CAACC,GAAb,EAAkB;AAChB,WAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,6BAAV,CAAf,CAAP;AACD;;AAED,MAAI,CAACJ,OAAO,CAACK,IAAb,EAAmB;AACjB,WAAOH,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,8BAAV,CAAf,CAAP;AACD;;AAEDJ,EAAAA,OAAO,GAAGM,MAAM,CAACC,MAAP,CAAc;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAAd,EAAyCR,OAAzC,CAAV;;AAEA,MAAIA,OAAO,CAACQ,eAAZ,EAA6B;AAC3B,QAAI,CAACd,IAAI,CAACe,OAAL,CAAaT,OAAO,CAACK,IAArB,CAAL,EAAiC;AAC/B,YAAMJ,GAAG,GAAGN,OAAO,CAAC,KAAD,CAAnB;;AACA,YAAMe,QAAQ,GAAGT,GAAG,CAACU,KAAJ,CAAUX,OAAO,CAACC,GAAlB,EAAuBS,QAAxC;AACA,YAAME,QAAQ,GAAGlB,IAAI,CAACkB,QAAL,CAAcF,QAAd,CAAjB;AACA,YAAMG,eAAe,GAAGC,kBAAkB,CAACF,QAAD,CAA1C;AAEAZ,MAAAA,OAAO,CAACK,IAAR,GAAeX,IAAI,CAACqB,IAAL,CAAUf,OAAO,CAACK,IAAlB,EAAwBQ,eAAxB,CAAf;AACD;AACF;;AAED,SAAOjB,OAAO,CAACI,OAAD,CAAd;AACD,CAvBD","sourcesContent":["'use strict';\n\nconst path = require('path');\nconst request = require('./lib/request');\n\nmodule.exports.image = (options = {}) => {\n  if (!options.url) {\n    return Promise.reject(new Error('The options.url is required'));\n  }\n\n  if (!options.dest) {\n    return Promise.reject(new Error('The options.dest is required'));\n  }\n\n  options = Object.assign({ extractFilename: true }, options);\n\n  if (options.extractFilename) {\n    if (!path.extname(options.dest)) {\n      const url = require('url');\n      const pathname = url.parse(options.url).pathname;\n      const basename = path.basename(pathname);\n      const decodedBasename = decodeURIComponent(basename);\n\n      options.dest = path.join(options.dest, decodedBasename);\n    }\n  }\n\n  return request(options);\n};\n"]},"metadata":{},"sourceType":"script"}