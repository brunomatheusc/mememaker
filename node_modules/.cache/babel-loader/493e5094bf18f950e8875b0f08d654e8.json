{"ast":null,"code":"var _jsxFileName = \"/home/bmatheusc/Documentos/GitHub/tutorials/mememaker/src/pages/Home/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Wrapper, Card, Templates, Form, Button } from './styles';\nimport logo from \"../../assets/logo.svg\";\nimport api from '../../services/api';\n\nconst Home = () => {\n  const [templates, setTemplates] = useState([]);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const response = await api.get('https://api.imgflip.com/get_memes');\n      const {\n        data: {\n          memes\n        }\n      } = response.data;\n      setTemplates(memes);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"MemeMaker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Selecione um template\"), /*#__PURE__*/React.createElement(Templates, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, templates.map(template => /*#__PURE__*/React.createElement(\"button\", {\n    key: template.id,\n    onClick: () => setSelectedTemplate(template),\n    className: template.id == (selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: template.url,\n    alt: template.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Textos\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Text #1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Text #1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Text #1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"MakeMyMeme\")))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/bmatheusc/Documentos/GitHub/tutorials/mememaker/src/pages/Home/index.tsx"],"names":["React","useState","useEffect","Wrapper","Card","Templates","Form","Button","api","Home","templates","setTemplates","selectedTemplate","setSelectedTemplate","response","get","data","memes","logo","map","template","id","url","name"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,MAAzC,QAAuD,UAAvD;;AAGA,OAAOC,GAAP,MAAgB,oBAAhB;;AAiBA,MAAMC,IAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAc,EAAd,CAA1C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAY,IAAZ,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMY,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,mCAAR,CAAvB;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,UAAsBH,QAAQ,CAACE,IAArC;AAEAL,MAAAA,YAAY,CAACM,KAAD,CAAZ;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,uDACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAGC,IAAX;AAAkB,IAAA,GAAG,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,SAAS,CAACS,GAAV,CAAeC,QAAD,iBACZ;AAAQ,IAAA,GAAG,EAAGA,QAAQ,CAACC,EAAvB;AAA4B,IAAA,OAAO,EAAG,MAAMR,mBAAmB,CAACO,QAAD,CAA/D;AAA4E,IAAA,SAAS,EAAGA,QAAQ,CAACC,EAAT,KAAeT,gBAAf,aAAeA,gBAAf,uBAAeA,gBAAgB,CAAES,EAAjC,IAAsC,UAAtC,GAAmD,EAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAGD,QAAQ,CAACE,GAApB;AAA0B,IAAA,GAAG,EAAGF,QAAQ,CAACG,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CADN,CAHJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAbJ,CAHJ,CADJ,CADJ;AA6BH,CA1CD;;AA4CA,eAAed,IAAf","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { Wrapper, Card, Templates, Form, Button } from './styles';\n\nimport logo from '../../assets/logo.svg';\nimport api from '../../services/api';\n\ninterface IProps {\n    data: IData;\n}\n\ninterface IData {\n    memes: ITemplate[];\n}\n\ninterface ITemplate {\n    id: number;\n    name: string;\n    url: string;\n    box_count: number;\n}\n\nconst Home: FC = () => {\n    const [templates, setTemplates] = useState<ITemplate[]>([]);\n    const [selectedTemplate, setSelectedTemplate] = useState<ITemplate>(null);\n\n    useEffect(() => {\n        (async () => {\n            const response = await api.get('https://api.imgflip.com/get_memes');           \n            const { data: { memes } } = response.data;\n\n            setTemplates(memes);\n        })();\n    }, [])\n\n    return (\n        <>\n            <Wrapper>\n                <img src={ logo } alt=\"MemeMaker\"/>\n\n                <Card>\n                    <h2>Selecione um template</h2>\n\n                    <Templates>\n                        { templates.map((template) => (\n                            <button key={ template.id } onClick={ () => setSelectedTemplate(template) } className={ template.id == selectedTemplate?.id ? 'selected' : '' }>\n                                <img src={ template.url } alt={ template.name } />\n                            </button>\n                        ))}\n                    </Templates>\n\n                    <h2>Textos</h2>\n\n                    <Form>\n                        <input type=\"text\" placeholder=\"Text #1\" />\n                        <input type=\"text\" placeholder=\"Text #1\" />\n                        <input type=\"text\" placeholder=\"Text #1\" />\n\n                        <Button type=\"submit\">MakeMyMeme</Button>\n                    </Form>\n                </Card>\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}